#!/bin/bash

# taken almost directly from https://github.com/LukeSmithxyz/voidrice/blob/master/.local/bin/mounter but edited to work with my setup

# Check for drives.
lsblkoutput="$(lsblk -rpo "uuid,name,type,size,label,mountpoint,fstype")"
# Get all LUKS drives
allluks="$(echo "$lsblkoutput" | grep crypto_LUKS)"
# Get a list of the LUKS drive UUIDs already decrypted.
decrypted="$(find /dev/disk/by-id/dm-uuid-CRYPT-LUKS2-* | sed "s|.*LUKS2-||;s|-.*||")"
# Functioning for formatting drives correctly for dmenu:
filter() { sed "s/ /:/g" | awk -F':' '$7==""{printf "%s%s (%s) %s\n",$1,$3,$5,$6}' ; }


# get only LUKS drives that are not decrypted

unopenedluks="$(for drive in $allluks; do
  uuid="${drive%% *}"
  uuid="${uuid//-}"  # in luke's words, this is a bashism
  [ -n "$decrypted" ] && for open in $decrypted; do
  [ "uuid" = "$open" ] && break 1
  done && continue 1
  echo "ðŸ”’ $drive"
done | filter)"

# Get all normal, non-encrypted or decrypted partitions that are not mounted.
normalparts="$(echo "$lsblkoutput"| grep -v crypto_LUKS | grep 'part\|rom\|crypt' | sed "s/^/ðŸ’¾ /" | filter )"

# one var for all drives
alldrives="$(echo "$unopenedluks
$normalparts" | sed "/^$/d;s/ *$//")"

# quit the script if a sequential command fails

set -e

test -n "$alldrives"

# feed all found drives to dmenu and get user choice
chosen="$(echo "$alldrives" | dmenu -p "Mount which drive?" -i)"

# function to prompt user for a mountpoint.
getmount(){
	mp="$(find /mnt /media /mount /home -maxdepth 1 -type d 2>/dev/null | dmenu -i -p "Mount this drive where?")"
	test -n "$mp"
	if [ ! -d "$mp" ]; then
		mkdiryn=$(printf "No\\nYes" | dmenu -i -p "$mp does not exist. Create it?")
		[ "$mkdiryn" = "Yes" ] && (mkdir -p "$mp" || sudo mkdir -p "$mp")
	fi
}

attemptmount(){
  sudo  mount "chosen" || return 1
  notify-send "ðŸ’¾Drive mounted." "$chosen mounted."
  exit
}

case "$chosen" in
	ðŸ’¾*)
		chosen="${chosen%% *}"
		chosen="${chosen:1}"	# This is a bashism.
		parttype="$(echo "$lsblkoutput" | grep "$chosen")"
		attemptmount || getmount
		case "${parttype##* }" in
			vfat) sudo  mount -t vfat "$chosen" "$mp" -o rw,umask=0000 ;;
			btrfs) sudo  mount "$chosen" "$mp" ;;
			*) sudo  mount "$chosen" "$mp" -o uid="$(id -u)",gid="$(id -g)" ;;
		esac
		notify-send "ðŸ’¾Drive Mounted." "$chosen mounted to $mp."
		;;

	ðŸ”’*)
		chosen="${chosen%% *}"
		chosen="${chosen:1}"	# This is a bashism.
		# Number the drive.
		while true; do
			[ -f "/dev/mapper/usb$num" ] || break
			num="$(printf "%02d" "$((num +1))")"
		done

		# Decrypt in a terminal window
		${TERMINAL:-st} -n floatterm -g 60x1 -e sudo cryptsetup open "$chosen" "usb$num"
		# Check if now decrypted.
		test -b "/dev/mapper/usb$num"

		attemptmount || getmount
		sudo mount "/dev/mapper/usb$num" "$mp" -o uid="$(id -u)",gid="$(id -g)"
		notify-send "ðŸ”“Decrypted drive Mounted." "$chosen decrypted and mounted to $mp."
		;;
esac
